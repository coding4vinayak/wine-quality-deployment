name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md

permissions:
  id-token: read
  contents: write

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: lint code
        run: echo "Linting repository"
      - name: run unit tests
        run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Build and push ECR image
    runs-on: ubuntu-latest
    needs: integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: install utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  Continuous-Deployment:
    needs: build-and-push-ecr-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: pull image from ECR
        run: |
          docker pull ${{secrets.AWS_ECR_LOGIN}}/${{secrets.ECR_REPOSITORY_NAME}}:latest

      - name: Run Docker Image to serve users
        run: |
          docker run -d -p 8080:8080 --name cnncls -e AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}} -e AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}} ${{secrets.AWS_ECR_LOGIN}}/${{secrets.ECR_REPOSITORY_NAME}}:latest
      - name: clean up
        run: |
          docker system prune -f
